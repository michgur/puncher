package templ

import "github.com/michgur/puncher/app/model"
import "github.com/michgur/puncher/app/design"
import "github.com/michgur/puncher/app/templ/customization"

templ SettingContainer(name string) {
	<span class="font-semibold text-xl mt-5">{ name }</span>
	<div class="overflow-x-auto basis-auto shrink-0 flex gap-3 py-3 px-0.5">
		{ children... }
	</div>
}

templ CustomizeCard(card model.CardDetails, config design.DesignConfig) {
	@Index("Customize Card") {
		<body class="bg-gray-100 bg-black flex flex-col h-dvh w-dvw text-black overflow-x-hidden">
			<header class="flex p-4 gap-10">
				<h1 class="basis-auto grow-0 shrink-0 text-3xl font-semibold">Customize Card</h1>
			</header>
			<form
				class="flex-1 flex flex-col md:flex-row overflow-hidden md:justify-between"
				hx-post={ "/customize/" + card.ID }
				hx-ext="json-enc"
				hx-target="#card"
				hx-trigger="input from:input throttle:100ms, blur from:div[contenteditable='true'] delay:50ms, change, submit"
			>
				<div id="card" class="md:flex-1 md:pt-[20%] md:max-w-md p-4 py-0.5">
					@Card(card, true)
				</div>
				<div class="flex-1 flex flex-col p-4 overflow-y-auto md:max-w-md">
					@SettingContainer("Color") {
						for name, setting := range config["color"] {
							<!-- TODO: refactor design settings, so the "name" is the property stored in card.Design -->
							@customization.Color(name, setting, setting["color"] == string(card.Design.Color))
						}
					}
					@SettingContainer("Font") {
						for name, setting := range config["font"] {
							@customization.Font(name, setting, setting["class"] == string(card.Design.Font))
						}
					}
					@SettingContainer("Pattern") {
						for name, setting := range config["pattern"] {
							@customization.Pattern(name, setting, setting["filename"] == string(card.Design.Pattern))
						}
					}
					@SettingContainer("Texture") {
						for name, setting := range config["texture"] {
							@customization.Texture(name, setting, setting["filename"] == string(card.Design.Texture))
						}
					}
					@SettingContainer("Texture %") {
						@customization.TextureOpacity(card.Design.TextureOpacity)
					}
				</div>
			</form>
		</body>
	}
}
